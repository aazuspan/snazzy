var STYLE_DATA = ee.FeatureCollection("projects/ee-aazuspan/assets/snazzy_styles");

var HELP = "\
\n█▓▒░░ Ｓｎａｚｚｙ Ｈｅｌｐ ░░▒▓█\
\n\nIMPORT SNAZZY\
\n════════════════════════════════════════════\
\nvar snazzy = require(users/aazuspan/snazzy:styles);\
\n\nADD A STYLE\
\n════════════════════════════════════════════\
\nsnazzy.addStyle(url, name);\
\n\nADD MULTIPLE STYLES\
\n════════════════════════════════════════════\
\nsnazzy.addStyles({url: name, url: name});\
\n\n\n\nMore info at https://github.com/aazuspan/snazzy\
\nFind styles at https://SnazzyMaps.com\
"

exports.help = function() {
  print(HELP);
}

// Query a style by URL from the style collection and return its JSON definition
var styleFromURL = function(styleURL) {
  var style = STYLE_DATA.filterMetadata("url", "equals", styleURL).first().getInfo()
  
  if (style == null) {
    throw "Style " + styleURL + " could not be found...";
  }
  
  return JSON.parse(style["properties"]["json"]);
}

// Added styles are automatically stored in this global
var activeStyles = {};


// Add a single style from a URL
exports.addStyle = function(url, name) {
  name = name || "User Style " + String(Object.keys(activeStyles).length + 1);
  
  // Prevent overwriting existing styles
  if (activeStyles[name] != null) {
    throw "A style with name '" + name + "' already exists! Style names must be unique.";
  }
  
  var style = styleFromURL(url);
  activeStyles[name] = style;
  
  Map.setOptions(name, activeStyles);
  return activeStyles;
}

// Add multiple styles from a mapping of URLs to names
exports.addStyles = function(styles) {
  for (var url in styles) {
    exports.addStyle(url, styles[url]);
  }
}